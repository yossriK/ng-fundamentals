use angular cli to create a new angular project, complete with configs to get your app ready for production. can get cli using npm install -g @angular/cli

use : ng new 'template name' to create a new an template for our angular project

angular.json : have some configs for our web packing....
and package json(tells you what dependencies you got) ~ this sign would mean the approximate version ( means would include other batch)
in src: app folder: most of our coding in
	assets folder: statics stuff like our images ...
{ there was some stuff to lock json files and the packages but I could care less at this point}

--- Angular 1 vs angular 2
angular 1 is now referred to as angular js
angulra 2 is simply angular

angular js is MVC architecture/framework where you have view/template that relates to controllers that exposes other mdoesl that represent data
angulra you have component that is one to one with template; you still got mdoels to represent data. component in angular can be thought of as directive in angyular
that get html and logic all together  1 but it was more cohesive and felt cluncky


angular app is bootstrapped
    hierarchical component tree have at its top app component, ==> this got the tempalte, styling and ts file.
    bootstrapping starts with the main.ts file that is linked at angular.json file (check main property), main.ts loaded when app starts, in there I link to appcomponent.ts, and
    in the modules I bootstrap app component as well, double check those sir. but how do I display component??

    look in app.component.ts, it got the selector that is refered in index.html. indexhtml loads first then this gets appcomponent



==-- App module: 
    when adding component, pipe or directive you should add them in declration sectiuon 
    services are added as provider,
    in imports you add other external providers and they become available thru the app I guess 



===-- how to use static assets in our files
    go add images in the assets folder
    linking here works as I am referncing the assets/images folder in our angular.json file that will be included in our app bundle(tells our webpack to do so )
    these were in the "assets" array that you can put images or icons, for scripts lets say there is "scripts" you can put your stuff there 
    I got some new packages installed, then I just refer them into our angular json file 

---=== 
getting scss styling from external package, what we did was usng a twitter package or so, npm isntall ngf-bootstrap --save 
    this package got ng-bootstrap, and jquery(not needed for anguylar dev but got it here) jquery got some help for our menus



----=== Binging and addings strings to html
{{object}} ==> this is interpolation htat represents oen way binding. Angular will look for that object in the component
we use thsi /$ to escape the dollar sign in a html if it is string literal: like html in the compoent itself usign ``
[input parameter in the reciever componet]=(member in our component, the sender)

=== Three ways for intercomponent communication
    ---== pass data from parent component to child component
    we importt Input from angular, and put @Input infront of the varible that we expect to be sent from a component to another 
    <event-thumbnail [event]="event1"></event-thumbnail>
    [input parameter in the reciever componet]=(member in our component, the sender)

    ---== pass data from child component to parent8 component

    @output when I want to send something from child component to the parent component 
    so in child component can have something like this 
    @output evnetClick = new EventEmitter(); 

    when button clicked funcntion()
    {
        this.evnetClick.emit(anydata);
    } ..> this all done in the child 

    now in the paernt i recieve the event liek this; in html for example
    (evnetClick(match same output property of child)) = "newCustomFunctionMadeinParentToHandleTheEmited($event(this refers to data emitted from event, single object))"


    ---=== acccessing public property of child compoents: Template refernce variable using # syntax
        allow to specify varibale name that points to a component and we access sstuff using that variable
        <event-thumbnail [event]="event1"></event-thumbnail> ==> thsi was how wer reference the child in parent html 
        so to add variable we do this in the html #thumbnail(radniom name) to look like this ==> <event-thumbnail #thumbnail [event]="event1"></event-thumbnail>
        
        now from parent html I can do thumbnail.functionNameInChild , and that should call it for me, 
        or jsut access any other property like this thumbnail.propertyName



==--=-= Applying css styles on componetn
angular has some good built in functionality to add styling
view encapsulation : applies changes to specific selectors wuithin your scope so your css doesnt bleed into other components.

you can use global styling in the style.css folder and apply that to all of your other files, but to be more specific in your css changes, angular would take care of that for you.
you can use SMACC for more crafting of what applys to what 


---=== Adding site header 
we will want to add app-router known as router outlet component, and then each top level component page will be displayed over, 
so we added navigation compoent on top of that the events-appcomponet


            ===---=== Exploring the angular Template Syntax ===---===
Interpolation {{objectname(namely an expression)}} and property binding [property] ="expression" ;
both are used to bind data form component to template, interpolation to display data, while binduign when I want to bind it to teh dom element

in these expressions cant do assigbnemnt( =, +=, ++ etc), new kewowrd, cant chain expressions together, cant access anythign from global namespace

expressions recommendations is to have no side-effects, be fast, be simple, idempotent(return same result always) 

-- evetng binding and statements
(click)_="doSomethign()", binding the click event to statement that is the function

same restrictions as expressions, for assignemnts = is allowed, others still hold, and allowed to chain using '
they are not required to be idempotent and ouwould have side effect and not fast always
they should be siomple

== Repeating data with NgFor
 *ngFor="let event of events" [event]="event"
 the '*' indicates that ngFor is a structural directive : change the cshape of the DOM as they add or remove elements from dom , 
 we passed to ngFor directive:  we created a local variable; 'events' was an array in the component. where that directive(ngfor) was put that element and all elements inside of it 
 will be repeated
 notice the styluing he added for column and row, was great great

== handle null values : Safe navigation operator
what if I sent values to the thumbnail that was null, or sent nothign at all but the component was expectign something lets say, in angular the app would actually break even 
tho the page displays no error( gotta inspect to see errors)
 to solve this, where ever a value is being passed to me, string interpolation lets say we gotta add a question mark to the end of the thingy/variable/expression
 might have to add this to inner properties as well like event.location.adada. this might work with just ? for event?.lcoa.sda  but what if lcoation wasnt there then we need to add
 for location property as well

 == hiding and shwoign content with ngif
 *ngif="event?.location" add somethign like this in the div, it doesnt just hide but it wont render at all at dom and wont do anywork
you wont see this element in the inpsect tools

 == hiding content with [Hidden] binding: 
 done in the case just hide then reshow, if it is done more frequent go with this method as if you go with the one above to not render it might be costly to then render again,
 so we just hide it, better from performance points
we can use [Hidden] property in the div to just hide it, it is still rendered, this is html thing but the angular binding makes it great
you will see the element in inspect tool having the hidden attribute

== hiding values with ngswitch: maybe like multiple options to hide or show
[ngSwithc]="value/expression" bounds what value we are watching
*ngSwitchCase= "'8:00 am'" string match for that value to get it runnign or not
*ngSwitchDefault this wouodl be the default value to fall into
css trick : you can keep the span in the div and will show beside it 

== styling components with ngClass  
class binding, if theis expression then add a certain class to this div [class.green]="some expression that woudl value to true ro false, can have somethigin = soemthieng and this logic is acceptatble"
but what if I want more thatn one class to bhe shown, then I need to do some else stuff, where ngClass comes in 
ngClass expects an object, mroe of a key-vlaue pair, the key is the css class I want to apply and the pair is if it true or false to apply 
or can return string, or array of classes I want to put there
the object is {green: expression to value to tryue or false, another class: another expression }
thsi also applied to that div of the element 

== styling components with ngStyle 
[style.color]="expresion evaluation ? style1 : style2" but what if want 2 styles
ngStyle same inline format as ngClass


            ====---==== Creating reusable services  ===---===

== Why are services necessary, 
want pieces of application to be reusable 
thub=mbnail responsible for how event looks like on stylking
but comopnenet need not to do business logic and get items/events ... thats too much responsibility for the component
that need to be done by other service, and there dependency injection 
service to serve us the data we looking to display


--==-- creating first service
this is nice to have for our services that we inject a service in the constructor of a comopnent. this is needed when we have an injection in teh service and the service is being referred in anither place
then all injected in it will be availlable for other components

import { Injectable } from '@angular/core';
@Injectable 

not goood to have the call to service in a constructor and it might be delayed , but we need that item in component once it start
so angular have life cycle hooks that we can hook onto once the compoent loads they get called:: ngOnInit()

==---===  usign third party libraries, injecting them in our code, basically wrapping them
we will use toaster for example for some pop up messages, these had some styles and js that we need to import in our styles and scripts in angular.json,
however the components might not know about it/ complain even it is in our app scope and thus we need to declare it in that component by declare let 'new servicename'
created a service to wrap that roastr


==>> wathc out when getting 3rd party services, they might need to be installed after a certain jquery library


                            ===---=== Routing and navigating pages ===---===
before advant of single page app all pages weree distinct and served separately and another call to be done for server for each page, and all the page would be replaced
now it loads single page from server namely index.html and rest are done using js and partially also not the whole page would be reloaded
Angular made this very simple for us

===--Adding multiple pages to your app
we just added another extra page for the details, id of the item passed in route and when the detial component is loaded we will get that id and fetch it from server
we have index.html bootstrapping someother element that got some child and that woudl be main page; moving on we want to use router-outlet: thatll display a route based on
their respected url 
import { Routes } from '@angular/router'; and add tyope Routes for array of routes object for more safety in routes.ts import this in appmodule by RouterModule.forRoot(appRoutes)
also in index.html we indicate that we are hosting this at teh base level of our app isign base href="/"
so add outlet in appComponent, define your routes, add routes to imports, add base href 


--==-- puling query param from the route: have to pass first, recheck your routes; usign activatedRoute service
+this.activatedRoute.snapshot.params['id']: how we got the id parameter 

==--== Linking to routes 
[routerLink]="['/evetns', event.id] turns the div to a link, wehn you click on it it will take you to that page
can also add this to <a> in navbar

==--== Naviagting from code
 { path: 'events/:id', component: EventDetailsComponent },
 { path: 'events/new', component: CreateEventComponent} --> put this on top of the lsit I guess for now( or change the whole name lol)
 angular cant differeniate between those 2 dummy paths so make sure to have a path between them

to call from code on click of button inject the import { Router } from '@angular/router'; into that component and bind that click onto a method, in the method you can then
        this.router.navigate(['/events']);


==--=== Gaurding against route activation 
intellisence have tehe canActivate and deDeActivate; route gaurd to take me to 404 if id is invalid lets say 
create 404 error componennt, add to app modules, then add routing to it

have a new activator service that mplenments canActivate. has a method that takes activated route snapchot,
on the routes.ts check which route i Want validation/gaurd for and then jsut add canActivate over there with what service it should speak to
we used a service for this functionality 

==--== Gaurding agains route De-activatiion
to prevent from getting user to leave a page before saving their data, lets say leaving before saving their new event
dont need a whoel service, can jsut define a function in the routes and register it in providers in app modules: (using short hand syntax)


==---== Preloading data for components using resolver handler
prefetch necessary for component and do prechecks before loading the comoponent especially in real world 
tried to make them async in our example here
what was happeingin is you can get compoenent to partially load and that is because we have header/title then data, so we dont want anything to display before getting my data

adding a resolver service, takes resolve as import and we map the data in there before sending them back to our component, and add the resolvier in appmodule and the respected route
    { path: 'events', component: EventsListComponent, resolve: {events: EventListResolver} },
notice I am passing an object to resolve, it goes to that resolver and get from there events 

==> all other routin to that page was affectes so look into that

==--== styling active links 
 routerLinkActive="active" add this to that div/a/li element and when that link is active it will apply that css syling class to it ,
  this will apply to all routes carrying first prefix so change it to full match
 [routerLinkActiveOptions]="{exact:true}"
  li> a.active { color: #F97924;} .. added > so doen get overridden by bootstrap



===---=== Lazily loading Feature modules 
adding more modules to my app instead of only app.modules
as we might have a portion of the site that is different from other stuff like user and events are didff, so want a diff module
we use commonmodule in the imports of the childmodule now, and use RouterModule.forchild(customroutes) (it was .forRoute in the main moudle)

add this in our routes.ts, you refer to the folder where is in in and the name of our other moduel
    { path: 'user', loadChildren: './user/user.module#UserModule'}


--==-- organizing your exports with barrels
can clean code as well with module breaking
creating barrels for our many imports called index.ts ( this can hvae index.ts from other diretories)
go check the index ts file we got
then we go to modules and jsut import what needed from those idnex file, makes our code cleaner a bit